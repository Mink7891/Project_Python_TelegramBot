import config
import telebot
from telebot import types
from database import dbworker
import os

db = dbworker('database.db')
ban_symvols = [',', '.']
config.TOKEN = 'TokenBot'
bot = telebot.TeleBot(token=config.TOKEN)
config.ADMIN_LIST = [576277089]

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_start = types.InlineKeyboardButton('–ó–∞–π—Ç–∏ –≤ –≤–æ–ª—à–µ–±–Ω—ã–π –º–∏—Ä DemonaüåÄ')
    markup.add(button_start)
    bot.send_message(message.from_user.id,
                     '–ü—Ä–∏–≤–µ—Çüëã\n\n–≠—Ç–æ Demon –±–æ—Çü§†\n\nDemon - –º–µ—Å—Ç–æ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ : \n - –¥–µ–º–æ–Ω–æ–≤üëπ\n - –∞–±—É—à–µ–∫ü¶π‚Äç‚ôÄÔ∏è \n - –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–ΩüëΩ ',
                     reply_markup=markup)
@bot.message_handler(content_types=['text'], func=lambda message: message.text == '–ó–∞–π—Ç–∏ –≤ –≤–æ–ª—à–µ–±–Ω—ã–π –º–∏—Ä DemonaüåÄ')

def start(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–µ–Ω—é —Å–∞–º–æ–≥–æ –±–æ—Ç–∞'''
    button_search = types.InlineKeyboardButton('–ù–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ—á–∫–∞üîç')

    button_create_profile = types.InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—Éüìå')

    button_edit_profile = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—Éüìù')

    button_remove_profile = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—åüóë')

    button_admin = types.InlineKeyboardButton('–ê–¥–º–∏–Ω–∫–∞‚öôÔ∏è')

    menu = types.ReplyKeyboardMarkup(resize_keyboard=True)

    if not db.search_user(message.from_user.id):
        menu.add(button_create_profile)
        bot.send_message(message.from_user.id,
                         '–ï—â—ë —Ä–∞–∑ —Å–∞–ª–∞–º.\n\n–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å –∏—Å–∫–∞—Ç—å —Å–µ–±–µ –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É :)',
                         reply_markup=menu)

    else:
        if message.from_user.id in config.ADMIN_LIST:
            menu.add(button_search, button_edit_profile,
                     button_admin, button_remove_profile)
            bot.send_message(
                message.from_user.id, '–í–∞–π —ç–±–µ\n\n–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Å–µ–º–∏ —ç—Ç–∏–º–∏ —à—Ç—É–∫–∞–º–∏ —á—Ç–æ –≤–Ω–∏–∑—É‚öô', reply_markup=menu) 

        else:
            menu.add(button_search, button_edit_profile, button_remove_profile)
            bot.send_message(
                message.from_user.id, '–í–∞–π —ç–±–µ\n\n–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Å–µ–º–∏ —ç—Ç–∏–º–∏ —à—Ç—É–∫–∞–º–∏ —á—Ç–æ –≤–Ω–∏–∑—É‚öô', reply_markup=menu)

name = ""
description = ""
city = ""
gender = ""
age = ""

@bot.message_handler(content_types=['text'], func=lambda message: message.text == '–ê–¥–º–∏–Ω–∫–∞‚öôÔ∏è')
def admin(message: types.Message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤'''
    button_cancel = types.InlineKeyboardButton('–í—ã–π—Ç–∏‚ùå')
    back = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back.add(button_cancel)
    bot.send_message(message.from_user.id,
                     '–ü—Ä–∏–≤–µ—Ç, –ê–¥–º–∏–ΩüëÆ‚Äç‚ôÇÔ∏è\n–¢—ã –º–æ–µ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ª—é–±—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–æ–æ–±—â–µ–Ω–∏—èüòè \
                     (—Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è üòî)\n–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–≤–µ–¥–∏ id —á–µ–ª–æ–≤–µ–∫–∞, –ø–æ—Ç–æ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ \
                     \n–ü—Ä–∏–º–µ—Ä: id,–ü—Ä–∏–≤–µ—Ç!', reply_markup=back)
    bot.register_next_step_handler(message, admin_send_msg)

def admin_send_msg(message):
    if message.text == '–í—ã–π—Ç–∏‚ùå':
        return start(message)

    msg = message.text.split(',')
    bot.send_message(msg[0], msg[1])
    bot.send_message(message.from_user.id,
                     '–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æüòÅ')
    return start(message)

@bot.message_handler(content_types=['text'], func=lambda message: message.text == '–°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—Éüìå')
def create_profile(message):
    '''–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è'''
    bot.send_message(message.from_user.id,
                     "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é —Å—Ç–∏–ª—ë–≤—É—é –∞–Ω–∫–µ—Ç—É, –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤\n–ö–∞–∫ –º–Ω–µ —Ç–µ–±—è –Ω–∞–∑—ã–≤–∞—Ç—å?üòâ",
                       reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, get_name)

def get_name(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏'''
    global name
    if len(str(message.text)) < 35 and (not str(message.text) in ban_symvols):
        name = message.text[0] + message.text[1:].lower()
        button_skip = types.InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
        skip = types.ReplyKeyboardMarkup(resize_keyboard=True)
        skip.add(button_skip)
        bot.send_message(message.from_user.id, name +
                         ' - –õ—è, –∫–∞–π—Ñ–æ–≤–æ–µ –∏–º—èüòâ\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –ø—Ä–æ —Å–µ–±—è —á—Ç–æ-—Ç–æ, —á—Ç–æ–±—ã –ª—é–¥–∏ –º–æ–≥–ª–∏ —É–∑–Ω–∞—Ç—å —Ç–µ–±—è –ª—É—á—à–µ', reply_markup=skip)
        bot.register_next_step_handler(message, create_profile_description)

    elif str(message.text) in ban_symvols:
        bot.send_message(
            message.from_user.id, '–£ —Ç–µ–±—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ãü§¨ü§¨\n–ó–∞–ø—è—Ç–∞—è –∏–ª–∏ —Ç–æ—á–∫–∞ –∫ –ø—Ä–∏–º–µ—Ä—É')

    else:
        bot.send_message(message.from_user.id, '–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ)')
        return bot.register_next_step_handler(message, get_name)

def create_profile_description(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è'''
    global description
    if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        bot.send_message(message.from_user.id, '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–∂–µ –Ω–æ—Ä–º)',
                         reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(
            message.from_user.id, '–¢–µ–ø–µ—Ä—å –ø—Ä–µ–¥–ª–∞–≥–∞—é –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ –≥–¥–µ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –∫–∞–π—Ñ–æ–≤–∞—Ç—åü§™')
        bot.register_next_step_handler(message, create_profile_city)

    elif len(message.text) < 100:
        description = message.text
        bot.send_message(
            message.from_user.id, '–ì–µ–æ–ª–æ–∫–∞—Ü–∏—é –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å!!! –Ø –±–æ—Ç, –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –º–æ–≥—É –æ—Ä–∞–±–æ—Ç–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å)')
        bot.send_message(
            message.from_user.id, '–° –∫–∞–π—Ñ–æ–º\n\n–¢–µ–ø–µ—Ä—å –ø—Ä–µ–¥–ª–∞–≥–∞—é –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ –≥–¥–µ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –∫–∞–π—Ñ–æ–≤–∞—Ç—åü§™')
        bot.register_next_step_handler(message, create_profile_city)

    else:
        bot.send_message(message.from_user.id, '–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ)')
        return bot.register_next_step_handler(message, create_profile_description)

def create_profile_city(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞'''
    global city
    if len(message.text) < 35 and (not str(message.text) in ban_symvols):
        city = message.text[0] + message.text[1:].lower()
        button_skip = types.InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
        skip = types.ReplyKeyboardMarkup(resize_keyboard=True)
        skip.add(button_skip)
        bot.send_message(
            message.from_user.id, '–ü—Ä–µ–ª–µ—Å—Ç–Ω–æ, —Ç–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–∏–º —Ñ–æ—Ç–æ—á–∫—É, —á—Ç–æ –±—ã –≤—Å–µ –∑–Ω–∞–ª–∏ –∫–∞–∫–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –∏–ª–∏ –∫–∞–∫–æ–π —Ç—ã –∞–±—É –±–∞–Ω–¥–∏—Ç\
                \n\n–í–∞–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π, –∞ –Ω–µ —Ñ–∞–π–ª–æ–º!', reply_markup=skip)
        bot.register_next_step_handler(message, create_profile_photo)

    elif str(message.text) in ban_symvols:
        bot.send_message(
            message.from_user.id, '–£ —Ç–µ–±—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ãü§¨ü§¨\n–ó–∞–ø—è—Ç–∞—è –∏–ª–∏ —Ç–æ—á–∫–∞ –∫ –ø—Ä–∏–º–µ—Ä—É')

    else:
        bot.send_message(message.from_user.id, '–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ)')
        return bot.register_next_step_handler(message, create_profile_city)

def create_profile_photo(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–∞'''
    try:
        button_male = types.InlineKeyboardButton('–ú—É–∂—á–∏–Ω–∞')

        button_wooman = types.InlineKeyboardButton('–ñ–µ–Ω—â–∏–Ω–∞')

        button_potato = types.InlineKeyboardButton('–ê–±—É—à–∫–∞ü§ô')

        gender_input = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        gender_input.add(button_male, button_wooman, button_potato)

        if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
            bot.send_message(
                message.from_user.id, '–ù—É –∏ –ª–∞–¥–Ω–æ(\n\n–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ,—É–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª(–Ω–µ —Ç–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥ —Ç–æ–±–æ–π:)', reply_markup=gender_input)
            bot.register_next_step_handler(message, create_profile_gender)

        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
            str(message.from_user.id) + '.jpg'
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        bot.send_message(message.from_user.id,
                         '–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ,—É–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª(–Ω–µ —Ç–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥ —Ç–æ–±–æ–π:)', reply_markup=gender_input)
        bot.register_next_step_handler(message, create_profile_gender)

    except:
        if message.text != "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
            bot.send_message(message.from_user.id,
                             '–û—Ç–ø—Ä–∞–≤—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ñ–æ—Ç–æ, –∞ –Ω–µ —ç—Ç–æ :)')
            return bot.register_next_step_handler(message, create_profile_photo)

def create_profile_gender(message):
    '''–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è'''
    global gender
    if message.text == '–ú—É–∂—á–∏–Ω–∞' or message.text == '–ñ–µ–Ω—â–∏–Ω–∞':
        gender = message.text.lower()
        bot.send_message(message.from_user.id,
                         '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!\n–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å\n\n–î–∞–≤–∞–π –∂–µ —É–∑–Ω–∞–µ–º —Ç–≤–æ–π –≤–æ–∑–≤—Ä–∞—Å—Ç, —á—Ç–æ –±—ã –Ω–µ —Å–∏–¥–µ—Ç—å –≤–æ—Å–µ–º—å –ª–µ—ÇüëÆ‚Äç‚ôÇÔ∏è',
                            reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, create_profile_age)

    elif message.text == '–ê–±—É—à–∫–∞ü§ô':
        bot.send_message(message.from_user.id,
                         '–≠—Ç–æ —à—É—Ç–∫–∞, –±—Ä–∞—Ç–∏—à–∫–∞ :)\n\n–ú—ã –≤—Å–µ –∑–Ω–∞–µ–º —á—Ç–æ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ 2 –≥–µ–Ω–¥–µ—Ä–∞ - —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä –∏ –≤–æ–¥–∫–∞)')
        return bot.register_next_step_handler(message, create_profile_gender)

    else:
        bot.send_message(message.from_user.id, '–†–µ–ø–∏—Ç –ø–ª–∏–∑ü•∫')
        return bot.register_next_step_handler(message, create_profile_gender)

def create_profile_age(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–µ–Ω—é —Å–∞–º–æ–≥–æ –±–æ—Ç–∞'''
    global age
    try:
        if int(message.text) < 6:
            bot.send_message(message.from_user.id,
                             '–æ–πü§≠\n–¢—ã —á—ë—Ç –º–∞–ª–æ–≤–∞—Ç...\n–ò–¥–∏ –∏–≥—Ä–∞–π –≤ –∫—Å)')
            bot.send_message(message.from_user.id, '–†–µ–ø–∏—Ç –ø–ª–∏–∑ü•∫')
            return bot.register_next_step_handler(message, create_profile_age)

        elif int(message.text) > 54:
            bot.send_message(message.from_user.id,
                             '–ü–∞–∂–∏–ª–æ–π —á–µ–ª–æ–≤–µ–∫üë®‚Äç')
            bot.send_message(message.from_user.id, '–ü–æ–≤—Ç–æ—Ä–∏ –ø–æ –±—Ä–∞—Ç—Å–∫–∏)')
            return bot.register_next_step_handler(message, create_profile_age)

        elif int(message.text) > 6 and int(message.text) < 54:
            age = message.text
            db.create_profile(message.from_user.id, message.from_user.username, str(name), str(description), str(city), \
                              'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + str(
                message.from_user.id) + '.jpg', str(gender), str(age))
            bot.send_message(message.from_user.id,
                             '–°—É–ø–µ—Ä :)\n\n–¢–≤–æ—è –∞–±—É –±–∞–Ω–¥–∏—Ç—Å–∫–∞—è –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞, –∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏—Éü§ò')
            db.edit_zero_profile_status(message.from_user.id)
            return start(message)

    except:
        bot.send_message(message.from_user.id,
                         '–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã')
        return bot.register_next_step_handler(message, create_profile_age)

@bot.message_handler(content_types=['text'], func=lambda message: message.text == '–£–¥–∞–ª–∏—Ç—åüóë')
def delete_profile(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã'''
    try:
        db.delete_profile(message.from_user.id)
        path = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
                str(message.from_user.id) + '.jpg'
        if os.path.exists(path):
            os.remove(path)
        bot.send_message(message.from_user.id, '–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!')
        return start(message)

    except:
        bot.send_message(message.from_user.id, '–†–µ–ø–∏—Ç –ø–ª–∏–∑ü•∫')
        return bot.register_next_step_handler(message, delete_profile)

@bot.message_handler(content_types=['text'], func=lambda message: message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—Éüìù')
def edit_profile(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã'''
    try:
        file_path = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
            str(message.from_user.id) + '.jpg'
        os.path.exists(file_path)
        if os.path.exists(file_path):
            photo = open('C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' +
                         str(message.from_user.id) + '.jpg', 'rb')

        button_again = types.InlineKeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüîÑ')
        button_edit_description = types.InlineKeyboardButton(
            '–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ãüìù')
        button_edit_age = types.InlineKeyboardButton(
            '–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–¥–∏–∫–æ–≤üë∂')
        button_edit_city = types.InlineKeyboardButton(
            '–ò–∑–º–µ–Ω–∏—Ç—å –º–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—èüè¢')
        button_edit_photo = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–∫—Éüéë')
        button_cancel = types.InlineKeyboardButton('–í—ã–π—Ç–∏‚ùå')
        edit_profile_m = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        edit_profile_m.add(button_again, button_edit_description,
                           button_edit_age, button_edit_city, button_edit_photo, button_cancel)
        caption = '–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n–ò–º—è - ' + str(db.all_profile(str(message.from_user.id))[0][2]).title() + '\n–û–ø–∏—Å–∞–Ω–∏–µ - ' + \
            str(db.all_profile(str(message.from_user.id))[
            0][3]) + '\n–ú–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–æüåé - ' + str(db.all_profile(str(message.from_user.id))[0][4]).title() + '\n–°–∫–æ–ª—å–∫–æ –≥–æ–¥–∏–∫–æ–≤?) - ' + \
                str(db.all_profile(str(message.from_user.id))[0][6])
        if os.path.exists(file_path):
            bot.send_photo(message.from_user.id, photo,
                           caption=caption, reply_markup=edit_profile_m)
            photo.close()

        else:
            bot.send_message(message.from_user.id, caption,
                             reply_markup=edit_profile_m)

    except:
        bot.send_message(message.from_user.id, '–û—à–∏–±–∫–∞ :(\n–ü–æ–≤—Ç–æ—Ä–∏ –µ—â—ë —Ä–∞–∑!')
        return bot.register_next_step_handler(message, edit_profile)

@bot.message_handler(content_types=['text'], func=lambda message: message.text == '–í—ã–π—Ç–∏‚ùå')
def exit(message):
    return start(message)

@bot.message_handler(content_types=['text'], func=lambda message: message.text == '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüîÑ')
def edit_profile_again(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –∑–∞–Ω–æ–≤–æ'''
    try:
        file_path = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
            str(message.from_user.id) + '.jpg'
        if os.path.exists(file_path):
            db.delete_profile(message.from_user.id)
            path = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
                str(message.from_user.id) + '.jpg'
            os.remove(path)
        return create_profile(message)

    except:
        bot.send_message(message.from_user.id, '–û—à–∏–±–∫–∞ :(\n–ü–æ–≤—Ç–æ—Ä–∏ –µ—â—ë —Ä–∞–∑!')
        return bot.register_next_step_handler(message, edit_profile_again)

@bot.message_handler(content_types=['text'], func=lambda message: message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–¥–∏–∫–æ–≤üë∂'
                     or message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ãüìù'
                     or message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –º–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—èüè¢'
                     or message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–∫—Éüéë')
def edit_profile_age_description(message: types.Message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–≤–æ–∑—Ä–∞—Å—Ç, –æ–ø–∏—Å–∞–Ω–∏–µ, –≥–æ—Ä–æ–¥ –∏ —Ç.–¥.)'''
    try:
        button_cancel = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')
        button_cancel_menu = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        button_cancel_menu.add(button_cancel)
        if message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–¥–∏–∫–æ–≤üë∂':
            bot.send_message(
                message.from_user.id, '–í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–≤—ã–π –≤–æ–∑–≤—Ä–∞—Å—Ç', reply_markup=button_cancel_menu)
            bot.register_next_step_handler(message, change_profile_age)

        elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ãüìù':
            bot.send_message(
                message.from_user.id, '–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ —Ö–∞–π–ø–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã!', reply_markup=button_cancel_menu)
            bot.register_next_step_handler(message, edit_profile_description)

        elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –º–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—èüè¢':
            bot.send_message(
                message.from_user.id, '–ì–µ–æ–ª–æ–∫–∞—Ü–∏—é –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å!!! –Ø –±–æ—Ç, –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –º–æ–≥—É –æ—Ä–∞–±–æ—Ç–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å)\
                    \n\n–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è', reply_markup=button_cancel_menu)
            bot.register_next_step_handler(message, edit_profile_city)

        elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–∫—Éüéë':
            bot.send_message(
                message.from_user.id, '–°–∫–∏–Ω—å —Å–≤–æ—é –Ω–æ–≤—É—é —Ñ–æ—Ç–æ—á–∫—É', reply_markup=button_cancel_menu)
            bot.register_next_step_handler(message, edit_profile_photo)

    except:
        bot.send_message(message.from_user.id, '–û—à–∏–±–∫–∞ :(\n–ü–æ–≤—Ç–æ—Ä–∏ –µ—â—ë —Ä–∞–∑!')
        return bot.register_next_step_handler(message, edit_profile_age_description)

def change_profile_age(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞'''
    global age
    try:
        if str(message.text) == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
            return edit_profile(message)

        elif int(message.text) < 6:
            bot.send_message(message.from_user.id,
                             '–æ–πü§≠\n–¢—ã —á—ë—Ç –º–∞–ª–æ–≤–∞—Ç...\n–ò–¥–∏ –∏–≥—Ä–∞–π –≤ –∫—Å)')
            bot.send_message(message.from_user.id, '–†–µ–ø–∏—Ç –ø–ª–∏–∑ü•∫')
            return bot.register_next_step_handler(message, change_profile_age)

        elif int(message.text) > 54:
            bot.send_message(message.from_user.id,
                             '–ü–∞–∂–∏–ª–æ–π —á–µ–ª–æ–≤–µ–∫üë®‚Äç')
            bot.send_message(message.from_user.id, '–ü–æ–≤—Ç–æ—Ä–∏ –ø–æ –±—Ä–∞—Ç—Å–∫–∏)')
            return bot.register_next_step_handler(message, change_profile_age)


        elif int(message.text) > 6 and int(message.text) < 54:
            age = message.text
            db.edit_age(age, message.from_user.id)
            bot.send_message(message.from_user.id,
                             '–° –∫–∞–π—Ñ–æ–º\n\n–í–æ–∑—Ä–∞—Å—Ç –∏–∑–º–µ–Ω—ë–Ω')
            return edit_profile(message)

    except:
        bot.send_message(message.from_user.id,
                         '–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã')
        return bot.register_next_step_handler(message, change_profile_age)

def edit_profile_description(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è'''
    global description
    try:
        if str(message.text) == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
            return edit_profile(message)
        description = message.text
        bot.send_message(
            message.from_user.id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±—Ä–æ–¥–∏\n\n–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!')
        db.edit_description(
            description, message.from_user.id)
        return edit_profile(message)
    except:
        bot.send_message(message.from_user.id, '–ü–æ–≤—Ç–æ—Ä–∏ –ø–æ –±—Ä–∞—Ç—Å–∫–∏)')
        return bot.register_next_step_handler(message, edit_profile_description)

def edit_profile_city(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞'''
    global city
    try:
        if str(message.text) == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
            return edit_profile(message)

        city = message.text
        bot.send_message(message.from_user.id,
                         '–ì–æ—Ä–æ–¥ –∏–∑–º–µ–Ω—ë–Ω')
        db.edit_city(
            city, message.from_user.id)
        return edit_profile(message)

    except:
        bot.send_message(message.from_user.id, '–†–µ–ø–∏—Ç, –ø–ª–∏–∏–∏–∏–∏–∏–∑')
        return bot.register_next_step_handler(message, edit_profile_city)

def edit_profile_photo(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ'''
    try:
        if str(message.text) == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
            return edit_profile(message)
        src = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
            str(message.from_user.id) + '.jpg'
        os.path.exists(src)

        if os.path.exists(src):
            path = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
                str(message.from_user.id) + '.jpg'
            os.remove(path)

        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
            str(message.from_user.id) + '.jpg'

        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        bot.send_message(message.from_user.id,
                         '–§–æ—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ')
        db.edit_photo(
            src, message.from_user.id)
        return edit_profile(message)
    except:
        bot.send_message(message.from_user.id,
                         '–û—Ç–ø—Ä–∞–≤—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ñ–æ—Ç–æ, –∞ –Ω–µ —ç—Ç–æ :)')
        return bot.register_next_step_handler(message, edit_profile_photo)

def watch_profile(profile_id, message):
    '''–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç'''
    db.edit_profile_status(str(message.from_user.id),db.search_profile_status(str(message.from_user.id))[0])
    button_like = types.InlineKeyboardButton('üëç')
    button_dislike = types.InlineKeyboardButton('üëé')
    button_exit = types.InlineKeyboardButton('–í—ã–π—Ç–∏‚ùå')
    mark_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
    mark_menu.add(button_dislike, button_like, button_exit)
    name_profile = str(db.get_info_user(profile_id)[2])
    age_profile = str(db.get_info_user(profile_id)[6])
    description_profile = str(db.get_info_user(profile_id)[3])
    file_path = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
        str(profile_id) + '.jpg'

    if os.path.exists(file_path):
        photo_profile = open(file_path, 'rb')

    city = str(db.get_info_user(profile_id)[4]).title()
    final_text_profile = f'–°–º–æ—Ç—Ä–∏, –∫–æ–≥–æ –¥–ª—è —Ç–µ–±—è –Ω–∞—à—ë–ª‚ò∫Ô∏è\n\n{name_profile},{age_profile},{city}\n{description_profile}'

    if os.path.exists(file_path):
        bot.send_photo(message.from_user.id, photo_profile,
                       caption=final_text_profile, reply_markup=mark_menu)

    else:
        bot.send_message(message.from_user.id,
                         final_text_profile, reply_markup=mark_menu)

profile_id = ""

@bot.message_handler(content_types=['text'], func=lambda message: message.text == '–ù–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ—á–∫–∞üîç')
def search_profile(message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–Ω–∫–µ—Ç'''
    global profile_id
    try:
        if db.search_profile(str(db.get_info_user(str(message.from_user.id))[4]), str(db.get_info_user(str(message.from_user.id))[6]), 
                             str(db.get_info_user(str(message.from_user.id))[7])) != None \
                and len(db.search_profile(str(db.get_info_user(str(message.from_user.id))[4]), str(db.get_info_user(str(message.from_user.id))[6]), 
                                          str(db.get_info_user(str(message.from_user.id))[7]))) != 0:
            try:
                profile_id = db.search_profile(str(db.get_info_user(str(message.from_user.id))[4]), str(db.get_info_user(str(message.from_user.id))[
                    6]), str(db.get_info_user(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]

            except IndexError:
                db.edit_zero_profile_status(message.from_user.id)
                profile_id = db.search_profile(str(db.get_info_user(str(message.from_user.id))[4]), str(db.get_info_user(str(message.from_user.id))[
                    6]), str(db.get_info_user(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]
            watch_profile(profile_id, message)
            bot.register_next_step_handler(message, search_profile1)


        elif db.search_profile2(str(db.get_info_user(str(message.from_user.id))[4]), str(db.get_info_user(str(message.from_user.id))[6]), 
                                str(db.get_info_user(str(message.from_user.id))[7])) != None \
                and len(db.search_profile2(str(db.get_info_user(str(message.from_user.id))[4]), str(db.get_info_user(str(message.from_user.id))[6]), 
                                           str(db.get_info_user(str(message.from_user.id))[7]))) != 0:
            try:
                profile_id = db.search_profile2(str(db.get_info_user(str(message.from_user.id))[4]), str(db.get_info_user(str(message.from_user.id))[
                    6]), str(db.get_info_user(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]

            except IndexError:
                db.edit_zero_profile_status(message.from_user.id)
                profile_id = db.search_profile2(str(db.get_info_user(str(message.from_user.id))[4]), str(db.get_info_user(str(message.from_user.id))[
                    6]), str(db.get_info_user(str(message.from_user.id))[7]))[db.search_profile_status(str(message.from_user.id))[0]][0]
                bot.send_message(
                    message.from_user.id, '–í —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ –Ω–µ—Ç –∞–Ω–∫–µ—Ç –∏–ª–∏ –æ–Ω–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å :(, –µ—Å—Ç—å –≤ –¥—Ä—É–≥–æ–º –≥–æ—Ä–æ–¥–µ)')
            watch_profile(profile_id, message)
            bot.register_next_step_handler(message, search_profile1)

        else:
            bot.send_message(message.from_user.id,
                '–õ—é–¥–µ–π —Ç–≤–æ–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –Ω–µ—Ç –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∞–Ω–∫–µ—Ç—ã')
            return start(message)

    except:
        bot.send_message(message.from_user.id, '–ù–µ –ø–æ–º–Ω—è–ª, –¥–∞–≤–∞–π –µ—â–µ —Ä–∞–∑ )')
        return bot.register_next_step_handler(message, search_profile)

def search_profile1(message):
    try:
        '''–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∞–Ω–∫–µ—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–≤–æ–µ–π –æ—Ü–µ–Ω–∫–∏(–ª–∞–π–∫,–¥–∏–∑–ª–∞–π–∫)'''
        if str(message.text) == '–í—ã–π—Ç–∏‚ùå':
            return start(message)

        elif str(message.text) == 'üëç':
            sympathy(message)
            return search_profile(message)

        elif str(message.text) == 'üëé':
            return search_profile(message)

    except:
        return search_profile(message)

def sympathy(message):
    global profile_id
    '''–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–º–ø–∞—Ç–∏–∏'''
    name_profile_self = str(db.get_info_user(
        str(message.from_user.id))[2])
    age_profile_self = str(db.get_info_user(
        str(message.from_user.id))[6])
    description_profile_self = str(db.get_info_user(
        str(message.from_user.id)[3]))
    file_path = 'C:/Users/user/Desktop/Project_Python_TelegramBot/photo/' + \
        str(message.from_user.id) + '.jpg'

    if os.path.exists(file_path):
        photo_profile = open(file_path, 'rb')

    city = str(db.get_info_user(message.from_user.id)[4]).title()

    if db.get_info_user(str(message.from_user.id)[3]) == None:
        final_text_profile_self = f'–¢–æ–±–æ–π –∫—Ç–æ —Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è!\n–°–∞–º –≤ —à–æ–∫–µüòÆ..\n\n{name_profile_self},{age_profile_self},{city} \
            \n\n–ß–µ–≥–æ —Ç—ã –∂–¥—ë—à—å,–±–µ–≥–∏ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è - @{str(message.from_user.username)}'

    else:
        final_text_profile_self = f'–¢–æ–±–æ–π –∫—Ç–æ —Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è!\n–°–∞–º –≤ —à–æ–∫–µüòÆ..\n\n{name_profile_self},{age_profile_self},{city}\n{description_profile_self}\
            \n\n–ß–µ–≥–æ —Ç—ã –∂–¥—ë—à—å,–±–µ–≥–∏ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è - @{str(message.from_user.username)}'

    if os.path.exists(file_path):
        bot.send_photo(profile_id, photo_profile,
            caption=final_text_profile_self)

    else:
        bot.send_message(profile_id, final_text_profile_self)
bot.polling(none_stop=True)
